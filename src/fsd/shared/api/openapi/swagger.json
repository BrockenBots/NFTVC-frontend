{
  "swagger": "2.0",
  "info": {
    "contact": {}
  },
  "paths": {
    "/api/auth/refresh-tokens": {
      "post": {
        "description": "Обновление access и refresh токенов с использованием валидного refresh токена",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Обновление Access и Refresh токенов",
        "parameters": [
          {
            "description": "RefreshTokens Request",
            "name": "refreshTokens",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.RefreshTokensRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Новые access и refresh токены",
            "schema": {
              "$ref": "#/definitions/response.RefreshTokensResponse"
            }
          },
          "400": {
            "description": "Неверный refresh токен или ошибка валидации",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "description": "Авторизация пользователя с использованием его Ethereum кошелька",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Авторизация через кошелек",
        "parameters": [
          {
            "description": "SignInWithWallet Request",
            "name": "signInWithWallet",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.SignInWithWalletRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Сгенерированный uuid для проверки подписи (nonce)",
            "schema": {
              "$ref": "#/definitions/response.SignInWithWalletResponse"
            }
          },
          "400": {
            "description": "Ошибка валидации или неправильный запрос",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    },
    "/api/auth/verify-signature": {
      "post": {
        "description": "Проверка подписи с использованием публичного ключа",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["auth"],
        "summary": "Верификация подписи",
        "parameters": [
          {
            "description": "VerifySignature Request",
            "name": "verifySignature",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/requests.VerifySignatureRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Подпись успешно проверена",
            "schema": {
              "$ref": "#/definitions/response.VerifySignatureResponse"
            }
          },
          "400": {
            "description": "Неверная подпись или неправильный запрос",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "schema": {
              "$ref": "#/definitions/response.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "requests.RefreshTokensRequest": {
      "type": "object",
      "required": ["refresh_token"],
      "properties": {
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "requests.SignInWithWalletRequest": {
      "type": "object",
      "required": ["wallet_pub"],
      "properties": {
        "wallet_pub": {
          "type": "string"
        }
      }
    },
    "requests.VerifySignatureRequest": {
      "type": "object",
      "required": ["signature", "wallet_pub"],
      "properties": {
        "signature": {
          "type": "string"
        },
        "wallet_pub": {
          "type": "string"
        }
      }
    },
    "response.ErrorResponse": {
      "type": "object",
      "required": ["error"],
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "response.RefreshTokensResponse": {
      "type": "object",
      "required": ["access_token", "refresh_token"],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "response.SignInWithWalletResponse": {
      "type": "object",
      "required": ["nonce"],
      "properties": {
        "nonce": {
          "type": "string"
        }
      }
    },
    "response.VerifySignatureResponse": {
      "type": "object",
      "required": ["access_token", "refresh_token"],
      "properties": {
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    }
  }
}
